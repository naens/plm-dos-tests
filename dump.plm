/****p* plm-exercises/dump
 *  NAME
 *    dump -- print file in hexadecimal and ascii
 *  DESCRIPTION
 *    Prints a file, the name of which is given as command line argument, on
 *    the console.  Each line corresponds to 16 bytes, the first column
 *    contain the offset of the first byte of the line from the beginning of
 *    the file, the second column contains the hexadecimal values of each
 *    byte and the third column contains the the ASCII representation of
 *    printable characters.
 * 
 *    One screen is printed at a time if the file is large.  The user can
 *    navigate using ^S for previous, ^X, space or enter for next.  By typing
 *    'g', the user can enter the address to which to jump (the addresses are
 *    absolute offsets from the beginning of the file.
 *  USES
 *    cons and sys modules
 *****
 */
dump:
do;

$include (cons.ext)
$include (sys.ext)
$include (fio.ext)
$include (const.lit)

    declare argc word;
    declare pargv address;
    declare argv based pargv (*) address;

    declare f word;

    call getargs(.argc, .pargv);
    if argc <> 2 then
    do;
        call println(.('Usage: dump <filename>', 0));
        goto exit;
    end;
    f = fopen(argv(1), true, false);
    if f <> 0ffffh then
    do;
        call println(.('File open OK!', 0));
        call fclose(f);
    end;
    else
    do;
        call println(.('File open error', 0));
        goto exit;
    end;

exit:
    call term;

end;
